{"chat_id": "bcf977d2-d543-48f2-94af-2173e8b35904", "content": "React Developer Hiring Assignment Problem Statement: In this assignment, you will create a web application for showcasing a list of courses and their details using React. Your task is to implement the course listing page, a course details page, and a student dashboard to display enrolled courses. Additionally, you may attempt bonus tasks marked with \ud83c\udf81for showcasing proficiency. Requirements: Course Listing: Create a page to showcase list of courses 1) Fetch a list of sample courses (use a dummy api or readymade backends like firebase). 2) Display the courses in a scrollable list with basic information and enable searching based on course name and instructor (e.g., course name, instructor, etc.). 3) Users should be able to click on a course to view its details. Course Details Screen: Create a new screen that displays detailed information about a selected course. This screen should be accessible from the course listing screen. Use the sample course model provided as a reference for the structure of course data. Display Course Information: Display the following course information on the details screen (as described in the previous assignment): 1) Course name 2) Instructor's name 3) Description 4) Enrollment status (e.g., 'Open', 'Closed', 'In Progress') 5) Course duration 6) Schedule 7) Location 8) Pre-requisites 9) Syllabus as an expandable item Student Dashboard: 1) Create a user dashboard for students to display the courses they are enrolled in. Include a user-friendly interface with a list of enrolled courses. 2) Display course name, instructor name, thumbnail, due date, and a progress bar. 3) Implement a feature that allows students to mark courses as completed. Advanced State Management: Utilize a state management library such as Redux or MobX to manage the application's state effectively. Submission Guidelines: 1) Please submit your assignment as a GitHub repository. Include the code for the course listing page, course details page, student dashboard, and any related components or screens. Additionally, provide clear instructions on how to run your application. 2) Attach a demo video of the website. Evaluation Criteria: 1) Correct implementation of the course listing page, course details page, and student dashboard. 2) Proper functionality for searching, and navigating between screens. 3) Proper data fetching and display. 4) Effective use of state management with Redux or MobX. 5) Responsive design that works well on different devices. 6) Note: You don\u2019t need to provide excessive focus on User interface design and visual appeal. You can choose a design of your choice and move forward with it. We are more interested in checking the quality of code and the functionality as you\u2019ll be working with skilled UI/UX resources in the future, \ud83c\udf81) Implement real time connection with api that shows the number of likes instantly in course listing page. Note that the feature to like a course is not necessary, you should be able to update data in the backend and it will show up instantly in the frontend. Sample Course Model: A sample course model is attached for your reference. Make necessary changes if required. const courseModel = { id: 1, // Unique identifier for the course name: 'Introduction to React Native', instructor: 'John Doe', // Name of the course instructor description: 'Learn the basics of React Native development and build your first mobile app.', enrollmentStatus: 'Open', // Can be 'Open', 'Closed', or 'In Progress' thumbnail: 'your.image.here', //Link to the course thumbnail duration: '8 weeks', // Duration of the course schedule: 'Tuesdays and Thursdays, 6:00 PM - 8:00 PM', location: 'Online', prerequisites: ['Basic JavaScript knowledge', 'Familiarity with React'], syllabus: [ { week: 1, topic: 'Introduction to React Native', content: 'Overview of React Native, setting up your development environment.' }, { week: 2, topic: 'Building Your First App', content: 'Creating a simple mobile app using React Native components.' }, // Additional weeks and topics... ], students: [ { id: 101, name: 'Alice Johnson', email: 'alice@example.com', }, { id: 102, name: 'Bob Smith', email: 'bob@example.com', }, // Additional enrolled students... ], }; export default courseModel;"}